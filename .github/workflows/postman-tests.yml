name: Run Newman Tests with NordLayer VPN (Testnet)

on:
  repository_dispatch:
    types: [run-tests]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          persist-credentials: true

      - name: Update Last Processed Upstream Run ID
        run: |
          echo "${{ github.event.client_payload.run_id }}" > .last_upstream_run_id.txt
          rm -f last_run_id.txt
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .last_upstream_run_id.txt
          git commit -m "[skip ci] Update last processed upstream run id to ${{ github.event.client_payload.run_id }}" || echo "No changes to commit."
          git push

      - name: Install Dependencies (Newman, NordLayer, Datadog CLI)
        run: |
          npm install -g newman newman-reporter-htmlextra
          sudo apt-get update
          sudo dpkg -i ./nordlayer/nordlayer-latest_1.0.0_all.deb
          sudo apt-get install -f -y
          sudo apt-get update
          sudo apt-get install -y nordlayer
          sudo systemctl daemon-reload
          sudo systemctl restart nordlayer.service
          sleep 2
          sudo chown -R runner:runner /run/nordlayer/
          sudo chmod 755 /run/nordlayer
          sudo chmod 666 /run/nordlayer/nordlayer.sock
          npm install -g @datadog/datadog-ci

      - name: Login to NordLayer VPN
        run: |
          nordlayer login --email "${{ secrets.NORDLAYER_EMAIL }}" --password "${{ secrets.NORDLAYER_PASSWORD }}" --organization "dydxopsdao"

      - name: Connect to NordLayer VPN
        run: |
          nordlayer gateways
          nordlayer connect "dos-server-BQG2cKQV"
          sleep 20
          echo "Verifying VPN IP..."
          curl ifconfig.me

      - name: Run Newman Tests for Testnet
        id: newman
        run: |
          newman run postman/collection.json \
            -e postman/environment.testnet.json \
            --reporters cli,htmlextra,junit \
            --reporter-htmlextra-export newman-report.html \
            --reporter-junit-export results.xml
          NEWMAN_EXIT_CODE=$?
          echo "exit_code=${NEWMAN_EXIT_CODE}" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Disconnect from NordLayer VPN
        run: |
          nordlayer status || true
          nordlayer disconnect || echo "Already disconnected"

      - name: Upload Test Results to Datadog
        run: datadog-ci junit upload results.xml --service "indexer-api-testing"
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
          DD_SITE: ap1.datadoghq.com

      - name: Upload Test Results (JUnit XML)
        uses: actions/upload-artifact@v4.6.0
        with:
          name: postman-test-results
          path: results.xml

      - name: Upload HTML Report (Nice UI)
        uses: actions/upload-artifact@v4.6.0
        with:
          name: postman-html-report
          path: newman-report.html

      - name: Notify Slack Channel
        if: always()
        run: |
          NEWMAN_EXIT_CODE="${{ steps.newman.outputs.exit_code || 0 }}"
          if [ "$NEWMAN_EXIT_CODE" -eq 0 ]; then
            COLOR="good"
            STATUS="success"
          else
            COLOR="danger"
            STATUS="failure"
          fi
          TEXT="Newman tests on testnet have completed with status: $STATUS (exit code: $NEWMAN_EXIT_CODE)."
          PAYLOAD=$(jq -n \
            --arg channel "indexer-api-testing" \
            --arg username "github-actions" \
            --arg icon_emoji ":rocket:" \
            --arg color "$COLOR" \
            --arg title "Newman Test Run Result" \
            --arg text "$TEXT" \
            '{channel: $channel, username: $username, icon_emoji: $icon_emoji, attachments: [{color: $color, title: $title, text: $text}]}')
          echo "Sending payload to Slack:"
          echo "$PAYLOAD"
          curl -X POST -H "Content-type: application/json" --data "$PAYLOAD" "${{ secrets.SLACK_WEBHOOK_URL }}"

      - name: Fail workflow if Newman tests failed
        if: always()
        run: |
          NEWMAN_EXIT_CODE="${{ steps.newman.outputs.exit_code || 0 }}"
          if [ "$NEWMAN_EXIT_CODE" -ne 0 ]; then
            echo "Newman tests failed with exit code $NEWMAN_EXIT_CODE."
            exit 1
          else
            echo "Newman tests passed."
          fi
